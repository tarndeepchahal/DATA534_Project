#install.packages("YoutubeLite_0.1.0.zip",repos=NULL)
library(YoutubeLite)
setwd("~/0 - DATA_534 - Web and Cloud Computing/Project/DATA534_Project")
#install.packages("YoutubeLite_0.1.0.zip",repos=NULL)
library(YoutubeLite)
#### FOR TESTING ####
set_key('AIzaSyAdy65AkdC-E8--0DYB5osklXQFQOKAFjI')
video_id <- 'https://www.youtube.com/watch?v=-DtSrdh5dHU'
get_views(video_id)
library(httr)
get_views(video_id)
rm(list = ls(all. names = TRUE))
library(YoutubeLite)
set_key('AIzaSyAdy65AkdC-E8--0DYB5osklXQFQOKAFjI')
video_id <- 'https://www.youtube.com/watch?v=-DtSrdh5dHU'
get_views(video_id)
library(YoutubeLite)
?get_details
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(gclus)
library(MLmetrics)
library(class)
library(corrplot)
library(arules)
library(arules)
library(arulesViz)
library(neuralnet)
library(nnet)
library(gamlss.add)
set.seed(4521, sample.kind="Rounding",echo=FALSE)
set.seed(4521, sample.kind="Rounding")
nn5_e2_org <- nnet(V7~., data=train2, size=3)
set.seed(4521, sample.kind="Rounding")
nn5_e1_org <- nnet(V7~., data=train2, size=5,linout=TRUE)
set.seed(4521, sample.kind="Rounding")
nn5_e1_org <- nnet(V7~., data=train2, size=5,linout=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(gclus)
library(MLmetrics)
library(class)
library(corrplot)
library(arules)
library(arules)
library(arulesViz)
library(neuralnet)
library(nnet)
library(gamlss.add)
fishdata<-read.csv(file="fish_toxicity.csv", sep=";",header = FALSE)
fishdata<- as.data.frame(fishdata)
fishnormal <- as.data.frame(apply(fishdata, 2, function(v) (v-min(v))/(max(v)-min(v))))
set.seed(4521, sample.kind="Rounding")
nn5 <- nnet(V7~., data=fishnormal, size=5)
plot(nn5)
set.seed(4521, sample.kind="Rounding")
nn5 <- nnet(V7~., data=fishnormal, size=5)
plot(nn5)
set.seed(4521, sample.kind="Rounding")
nn5 <- nnet(V7~., data=fishnormal, size=5)
plot(nn5)
set.seed(4521, sample.kind="Rounding")
nn5 <- nnet(V7~., data=fishnormal, size=5)
plot(nn5)
set.seed(4521, sample.kind="Rounding")
nn5 <- nnet(V7~., data=fishnormal, size=5)
plot(nn5)
set.seed(4521, sample.kind="Rounding")
nn5 <- nnet(V7~., data=fishnormal, size=5)
plot(nn5)
set.seed(4521, sample.kind="Rounding")
nn5 <- nnet(V7~., data=fishnormal, size=5)
plot(nn5)
set.seed(4521, sample.kind="Rounding")
nn5 <- nnet(V7~., data=fishnormal, size=5)
plot(nn5)
set.seed(4521, sample.kind="Rounding")
nn5 <- nnet(V7~., data=fishnormal, size=5,trace=FALSE)
plot(nn5)
sum((predict(nn5, fishnormal) - fishnormal$V7)^2)/(nrow(fishnormal))
sum((predict(nn5, fishnormal) - fishnormal$V7)^2)/(nrow(fishnormal))
set.seed(4521)
nn5 <- nnet(V7~., data=fishnormal, size=5,trace=FALSE)
plot(nn5)
sum((predict(nn5, fishnormal) - fishnormal$V7)^2)/(nrow(fishnormal))
sum((predict(nn5, fishnormal) - fishnormal$V7)^2)/(nrow(fishnormal))
set.seed(4521)
nn5 <- nnet(V7~., data=fishnormal, size=5,trace=FALSE)
plot(nn5)
set.seed(4521)
nn5 <- nnet(V7~., data=fishnormal, size=5,trace=FALSE)
plot(nn5)
set.seed(4521)
nn5 <- nnet(V7~., data=fishnormal, size=5,trace=FALSE)
plot(nn5)
sum((predict(nn5, fishnormal) - fishnormal$V7)^2)/(nrow(fishnormal))
sum((predict(nn5, fishnormal) - fishnormal$V7)^2)/(nrow(fishnormal))
set.seed(217)
ind <- sample(1:nrow(fishnormal), 454)
train <- fishnormal[ind,]
test  <-  fishnormal[-ind,]
set.seed(4521)
nn5_b <- nnet(V7~., data=train, size=5,trace=FALSE)
plot(nn5_b)
sum((predict(nn5_b, test) - test$V7)^2)/nrow(test)
train2  <- fishdata[ind,]
test2   <-  fishdata[-ind,]
set.seed(4521)
nn5_c <- nnet(V7~., data=train2, size=5,trace=FALSE)
sum((predict(nn5_c, test2) - test2$V7)^2)/nrow(test2)
fishlm <- lm(V7~., data=train)
sum((predict(fishlm, test) - test$V7)^2)/nrow(test)
LAfunc <- function(x) x
set.seed(4521)
nn5_e1 <- nnet(V7~., data=train, size=5,linout = TRUE,trace=FALSE)
sum((predict(nn5_e1, test) - test$V7)^2)/(nrow(test))
set.seed(4521)
nn5_e2 <- nnet(V7~., data=train, size=3,trace=FALSE)
sum((predict(nn5_e2, test) - test$V7)^2)/(nrow(test))
set.seed(4521)
nn5_e2 <- nnet(V7~., data=train, size=3,trace=FALSE)
sum((predict(nn5_e2, test) - test$V7)^2)/(nrow(test))
set.seed(4521)
nn5_e3 <- nnet(V7~., data=train, size=3,linout=TRUE,trace=FALSE)
sum((predict(nn5_e3, test) - test$V7)^2)/(nrow(test))
